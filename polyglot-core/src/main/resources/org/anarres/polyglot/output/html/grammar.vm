<!DOCTYPE html>
<html>
<head>
    <link href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/css/bootstrap.min.css" rel="stylesheet" integrity="sha256-7s5uDGW3AHqw6xtJmNNtr+OBRJUlgkNJEo78P4b0yRw= sha512-nNo+yCHEyn0smMxSswnf/OnX6/KwJuZTlNZBjauKhTK0c+zT+q5JOCx0UFhXQ6rJR9jg6Es8gPuD2uZcYDLqSw==" crossorigin="anonymous">
    <link href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/css/bootstrap-theme.min.css" rel="stylesheet" integrity="sha256-o8bM0Z5cFvrvvvQp0EJFi4LICvBA9FCx7iCNuojVsN8=" crossorigin="anonymous">
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.3/jquery.min.js" integrity="sha256-rsPUGdUPBXgalvIj4YKJrrUlmLXbOb6Cp7cdxn1qeUc=" crossorigin="anonymous"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/js/bootstrap.min.js" integrity="sha256-KXn5puMvxCw+dAYznun+drMdG1IFl3agK0p/pqT9KAo= sha512-2e8qq0ETcfWRI4HJBzQiA3UoyFk6tbNyG+qSaIBZLyW9Xf3sWZHN/lxe9fTh1U45DpPf07yj94KsUHHWe4Yk1A==" crossorigin="anonymous"></script>
</head>

#macro(usage $context $objects)
#if (!$objects.isEmpty())
	<li>Usage ($context):
#foreach ($object in $objects)
    <a href="#$helper.a($object)">$object.name</a>
#end
	</li>
#end##isEmpty
#end##macro

#macro(expression $root)
##	$root
##
#if ($root.type == "null")
	Null
#elseif ($root.type == "list")
	[
	#foreach ($item in $root.items)##
	#expression($item)#if($velocityHasNext),#{end}
	#end##item
	]
#elseif ($root.type == "new")
	New <a href="#$helper.a($root.astAlternative)">${root.astAlternative.name}</a>(
	#foreach ($argument in $root.arguments)
	#expression($argument)#if($velocityHasNext),#{end}
	#end##argument
	)
#elseif ($root.type == "reference")
	${root.element}##
#else
#stop("ERROR: Unknown type $root.type")
#end
##
#end

<body>
    <div class="container">

#if (!$grammar.helpers.isEmpty())
<h1>Helpers</h1>

	<div class="well pg-helpers">
<ul>
#foreach ($token in $grammar.helpersAlphabetical)
    <!-- $esc.html($token) -->

    <li id="$helper.a($token)">
		$helper.toJavadocText($token)
		${token} = $helper.toRegex($token.matcher, "#", "")
	</li>

#end##helper
</ul>
	</div>
#end##helpers


#if (!$grammar.tokens.isEmpty())
<h1>Tokens</h1>

	<div class="well pg-tokens">
<ul>
#foreach ($token in $grammar.tokensAlphabetical)
    <!-- $esc.html($token) -->

## Matcher: ${token.matcher}
## Transitions: ${token.transitions}

    <li id="$helper.a($token)">
		$helper.toJavadocText($token)
		${token} = $helper.toRegex($token.matcher, "#", "")
	</li>
	<ul>
		#usage("CST", $helper.getCstTokenUsage($token))
		#usage("AST", $helper.getAstTokenUsage($token))
	</ul>

#end##token
</ul>
	</div>
#end

<h1>Productions</h1>

#foreach ($production in $grammar.cstProductionsAlphabetical)
    <!-- $esc.html($production) -->

    <h2 id="$helper.a($production)">${production.name} { -&gt;
#foreach ($transformPrototype in $production.transformPrototypes)
        <a href="#$helper.a($transformPrototype.symbol)">${transformPrototype}</a>
#end##transformPrototype
    }</h2>

	$helper.toJavadocText($production)

	<div class="well pg-cst pg-alternatives">
	<ul>
#foreach ($alternative in $production.alternatives)
    <!-- $esc.html($alternative) -->

    <li id="$helper.a($alternative)">${alternative.name} =

#foreach ($element in $alternative.elements)
        <a href="#$helper.a($element.symbol)">${element}</a>
#end##element
		$helper.toJavadocText($alternative)
	</li>
	<ul>
		<li>{ -&gt;
#foreach ($transformExpression in $alternative.transformExpressions)
    #expression($transformExpression)
#end##transformExpression
		}</li>
	</ul>

#end##alternative
	</ul>
	</div>

	<div class="well pg-cst pg-usage">
		<ul>
			#usage("CST", $helper.getCstCstUsage($production))
		</ul>
	</div>
#end##production

#if (!$grammar.externals.isEmpty())
<h1>Externals</h1>

<ul>
#foreach ($external in $grammar.externals)
    <!-- $esc.html($external) -->
    <li id="$helper.a($external)">${external.name} (${external.javaTypeName})
		$helper.toJavadocText($external)
	</li>
#end##external
</ul>
#end##externals

<h1>Abstract Syntax Tree</h1>

#foreach ($production in $grammar.astProductionsAlphabetical)
    <!-- $esc.html($production) -->

    <h2 id="$helper.a($production)">${production.name} (${production.javaTypeName})</h2>
		$helper.toJavadocText($production)

	<div class="well pg-ast pg-alternatives">
#foreach ($alternative in $production.alternatives)
    <!-- $esc.html($alternative) -->

    <div class="pg-name" id="$helper.a($alternative)" title="${alternative.javaTypeName}">${alternative.name} =</div>
			$helper.toJavadocText($alternative)

<ul>
#foreach ($element in $alternative.elements)
        <li><a href="#$helper.a($element.symbol)" title="${element.javaTypeName} get${element.javaMethodName}()">${element}</a>
			$helper.toJavadocText($element)
#end##element
#foreach ($external in $alternative.externals)
        <li><a href="#$helper.a($external.symbol)" title="${external.javaTypeName} get${external.javaMethodName}()">${external}</a>
			$helper.toJavadocText($external)
#end##element
			#usage("CST", $helper.getCstAstUsage($alternative))
</ul>

#end##alternative
	</div>

	<div class="well pg-ast pg-usage">
		<ul>
			#usage("AST", $helper.getAstAstUsage($production))
		</ul>
	</div>

#end##production

</body>
</html>

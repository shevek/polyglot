Package org.anarres.polyglot.test.annotations;

Externals

	e_string = 'java.lang.String' ;

Tokens
	@javaImplements('java.io.Serializable')
	@javaClassAnnotation('@net.jcip.annotations.ThreadSafe')
	foo = 'foo' ;

Abstract Syntax Tree

	@javaImplements('java.io.Serializable')
	@javaClassAnnotation('@net.jcip.annotations.ThreadSafe')
	@testBare
	@testNone()
	@testEmpty('')
	@testSingle('x')
	@testDouble('xx')
	@testEscaped('\\\n')
	program =
		@javaImplements('java.io.Serializable')
		@javaClassAnnotation('@net.jcip.annotations.Immutable')
		{foo}
			@javaClassAnnotation('@javax.annotation.CheckForSigned')
			@javaFieldAnnotation('@javax.annotation.CheckForSigned')
			@javaSetAnnotation('@javax.annotation.CheckForSigned')
			@javaGetAnnotation('@javax.annotation.CheckForSigned')
			foo
			@javaClassAnnotation('@javax.annotation.Nonnegative')
			@javaFieldAnnotation('@javax.annotation.Nonnegative')
			@javaSetAnnotation('@javax.annotation.Nonnegative')
			@javaGetAnnotation('@javax.annotation.Nonnegative')
			[bar]:e_string ;




